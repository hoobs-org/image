steps:
  - mkimg: "{{ output }}"
    size: 3G

  - mklabel: msdos
    device: "{{ output }}"

  - mkpart: primary
    fs-type: 'fat32'
    device: "{{ output }}"
    start: 4MiB
    end: 20%
    tag: /boot

  - mkpart: primary
    device: "{{ output }}"
    start: 20%
    end: 100%
    tag: /

  - kpartx: "{{ output }}"

  - mkfs: vfat
    partition: /boot
    label: HOOBSFIRM

  - mkfs: ext4
    partition: /
    label: HOOBSROOT

  - mount: /

  - mount: /boot
    mount-on: /
    dirname: '/boot/firmware'

  - unpack-rootfs: /

  - qemu-debootstrap: __RELEASE__
    mirror: http://deb.debian.org/debian
    target: /
    arch: __ARCH__
    components:
    - main
    - contrib
    - non-free
    unless: rootfs_unpacked

  - create-file: /etc/apt/sources.list
    trailing-newline: '1'
    contents: |
      deb http://deb.debian.org/debian __RELEASE__ main contrib non-free
      deb http://security.debian.org/debian-security __SECURITY_SUITE__ main contrib non-free
    unless: rootfs_unpacked

  - copy-file: /etc/initramfs-tools/hooks/resizerootfs
    src: rootfs/etc/initramfs-tools/hooks/resizerootfs
    perm: 0755
    unless: rootfs_unpacked

  - copy-file: /etc/initramfs-tools/scripts/local-bottom/resizerootfs
    src: rootfs/etc/initramfs-tools/scripts/resizerootfs
    perm: 0755
    unless: rootfs_unpacked

  - chroot: /
    shell: |
      apt-get update
    unless: rootfs_unpacked

  - apt: install
    packages:
    - gnupg
    - less
    - ca-certificates
    - dosfstools
    - iw
    - parted
    - ssh
    - sudo
    - wget
    - curl
    - nano
    - tar
    - git
    - make
    - gcc
    - g++
    - bluetooth
    - wpasupplicant
    - network-manager
    - avahi-daemon
    - avahi-utils
    - dnsmasq
    - hostapd
    - raspi-firmware
    - firmware-brcm80211
    - __LINUX_IMAGE__
    tag: /
    unless: rootfs_unpacked

  - chroot: /
    shell: |
      mount -t proc /proc proc/
      apt-get -y install python3-minimal python3-pip
    unless: rootfs_unpacked

  - apt: install
    packages:
    - python3-rpi.gpio
    - python3-smbus
    - lirc
    tag: /
    unless: rootfs_unpacked

  - copy-file: /etc/fstab
    src: rootfs/etc/fstab
    perm: 0644
    unless: rootfs_unpacked

  - copy-file: /etc/sysctl.conf
    src: rootfs/etc/sysctl.conf
    perm: 0644
    unless: rootfs_unpacked

  - copy-file: /etc/sudoers
    src: rootfs/etc/sudoers
    perm: 0440
    unless: rootfs_unpacked

  - copy-file: /usr/sbin/update-sysconf
    src: rootfs/usr/sbin/update-sysconf
    perm: 0755
    unless: rootfs_unpacked

  - copy-file: /boot/firmware/sysconf.txt
    src: rootfs/boot/sysconf.txt
    perm: 0644
    unless: rootfs_unpacked

  - copy-file: /etc/systemd/resolved.conf
    src: rootfs/etc/systemd/resolved.conf
    perm: 0644
    unless: rootfs_unpacked

  - copy-file: /etc/systemd/system/sysconf.service
    src: rootfs/etc/systemd/system/sysconf.service
    perm: 0644
    unless: rootfs_unpacked

  - copy-file: /etc/systemd/system/firmware.service
    src: rootfs/etc/systemd/system/firmware.service
    perm: 0644
    unless: rootfs_unpacked

  - copy-file: /etc/systemd/system/openssh-keys.service
    src: rootfs/etc/systemd/system/openssh-keys.service
    perm: 0644
    unless: rootfs_unpacked

  - cache-rootfs: /
    unless: rootfs_unpacked

  - create-file: /etc/hostname
    trailing-newline: '1'
    contents: |
      hoobs

  - copy-file: /etc/issue
    src: rootfs/etc/issue
    perm: 0644

  - copy-file: /etc/motd
    src: rootfs/etc/motd
    perm: 0644

  - copy-file: /etc/update-motd.d/10-uname
    src: rootfs/etc/update-motd.d/10-uname
    perm: 0755

  - copy-file: /etc/update-motd.d/20-network
    src: rootfs/etc/update-motd.d/20-network
    perm: 0755

  - copy-file: /usr/lib/python3.9/tzupdate.py
    src: rootfs/usr/lib/python3.9/tzupdate.py
    perm: 0644

  - copy-file: /usr/bin/tzupdate
    src: rootfs/usr/bin/tzupdate
    perm: 0755

  - copy-file: /usr/lib/systemd/system/tzupdate.service
    src: rootfs/usr/lib/systemd/tzupdate.service
    perm: 0644

  - chroot: /
    shell: |
      sysctl -p
      curl -s https://deb.nodesource.com/gpgkey/nodesource.gpg.key | gpg --dearmor | tee /usr/share/keyrings/nodesource.gpg > /dev/null
      curl -s https://dl.yarnpkg.com/debian/pubkey.gpg | gpg --dearmor | tee /usr/share/keyrings/yarn.gpg > /dev/null
      curl -s https://dl.hoobs.org/debian/pubkey.gpg.key | gpg --dearmor | tee /usr/share/keyrings/hoobs.gpg > /dev/null

  - create-file: /etc/apt/sources.list.d/nodesource.list
    contents: |
      deb [signed-by=/usr/share/keyrings/nodesource.gpg] https://deb.nodesource.com/__NODE_REPO__ __RELEASE__ main
      deb-src [signed-by=/usr/share/keyrings/nodesource.gpg] https://deb.nodesource.com/__NODE_REPO__ __RELEASE__ main

  - create-file: /etc/apt/sources.list.d/yarn.list
    contents: |
      deb [signed-by=/usr/share/keyrings/yarn.gpg] https://dl.yarnpkg.com/debian stable main

  - create-file: /etc/apt/sources.list.d/hoobs.list
    contents: |
      deb [signed-by=/usr/share/keyrings/hoobs.gpg] https://dl.hoobs.org/debian/ stable main

  - chroot: /
    shell: |
      apt-get update

  - create-file: /etc/hoobs
    contents: |
      ID=__VENDOR_ID__
      MODEL=__VENDOR_MODEL__
      SKU=__VENDOR_SKU__

  - apt: install
    packages:
    - nodejs
    - yarn
    - helm
    - hbs-portal
    - hoobs-cli
    - hoobsd
    - hoobs-gui
    - ffmpeg
    tag: /

  - copy-file: /usr/lib/systemd/system/hbs-portal.service
    src: rootfs/usr/lib/systemd/hbs-portal.service
    perm: 0644

  - copy-file: /etc/systemd/system/hoobsd.service
    src: rootfs/etc/systemd/system/hoobsd.service
    perm: 0644

  - create-dir: /var/lib/hoobs
    perm: 0755

  - copy-file: /var/lib/hoobs/bridges.conf
    src: rootfs/var/bridges.conf
    perm: 0644

  - chroot: /
    shell: |
      mkdir -p /etc/systemd/system/multi-user.target.wants

      rm -f /etc/systemd/system/multi-user.target.wants/hbs-portal.service
      rm -f /etc/systemd/system/multi-user.target.wants/tzupdate.service
      rm -f /etc/systemd/system/multi-user.target.wants/hostapd.service
      rm -f /etc/systemd/system/multi-user.target.wants/dnsmasq.service

      ln -s /etc/systemd/system/hoobsd.service /etc/systemd/system/multi-user.target.wants/hoobsd.service
      ln -s /lib/systemd/system/hbs-portal.service /etc/systemd/system/multi-user.target.wants/hbs-portal.service
      ln -s /lib/systemd/system/tzupdate.service /etc/systemd/system/multi-user.target.wants/tzupdate.service

  - shell: |
      sed -i 's,root:[^:]*:,root::,' "${ROOT?}/etc/shadow"

      mkdir -p "${ROOT?}/etc/systemd/system/basic.target.requires/"
      mkdir -p "${ROOT?}/etc/systemd/system/multi-user.target.requires/"

      ln -s /etc/systemd/system/sysconf.service "${ROOT?}/etc/systemd/system/basic.target.requires/sysconf.service"
      ln -sf /run/systemd/resolve/resolv.conf "${ROOT?}/etc/resolv.conf"

      rm -f "${ROOT?}/etc/initramfs-tools/hooks/resizerootfs"
      rm -f "${ROOT?}/etc/initramfs-tools/scripts/local-bottom/resizerootfs"

      ln -s /etc/systemd/system/firmware.service "${ROOT?}/etc/systemd/system/multi-user.target.requires/firmware.service"
      ln -s /etc/systemd/system/openssh-keys.service "${ROOT?}/etc/systemd/system/multi-user.target.requires/openssh-keys.service"

      rm -f "${ROOT?}"/etc/ssh/ssh_host_*_key*
    root-fs: /

  - chroot: /
    shell: |
      install -m 644 -o root -g root __DTB__ /boot/firmware/

  - chroot: /
    shell: |
      apt-get clean
      rm -rf /var/lib/apt/lists

  - chroot: /
    shell: |
      sed -i 's/^/console=__SERIAL_CONSOLE__ /' /boot/firmware/cmdline.txt
      sed -i 's/.dev.mmcblk0p2/LABEL=HOOBSROOT/' /boot/firmware/cmdline.txt

  - shell: |
      rm "${ROOT?}/etc/resolv.conf"
    root-fs: /

  - chroot: /
    shell: |
      rm -f /etc/machine-id /var/lib/dbus/machine-id

  - chroot: /
    shell: |
      adduser --gecos hoobs --disabled-password hoobs
      adduser hoobs sudo
      echo "hoobs:hoobsadmin" | chpasswd
      passwd --expire hoobs
      passwd -l root
